package com.hosu.accountbook.controller;import com.hosu.accountbook.common.response.ApiResponse;import com.hosu.accountbook.dto.UserAccountDTO;import com.hosu.accountbook.dto.request.UserDeleteRequest;import com.hosu.accountbook.dto.request.UserLoginRequest;import com.hosu.accountbook.dto.request.UserSignUpRequest;import com.hosu.accountbook.service.UserAccountService;import io.swagger.v3.oas.annotations.Operation;import io.swagger.v3.oas.annotations.tags.Tag;import lombok.RequiredArgsConstructor;import org.springframework.web.bind.annotation.*;import java.util.List;@RequiredArgsConstructor@RestController@RequestMapping("/api/v1/users")@Tag(name = "유저 API")public class UserController {    private final UserAccountService userAccountService;    @GetMapping    @Operation(summary = "유저 조회", description = "userAccountDTO를 반환하는 API")    public ApiResponse<List<UserAccountDTO>> searchUser() {        return ApiResponse.successResponse(userAccountService.searchUser());    }    @PostMapping("/signup")    @Operation(summary = "회원 가입", description = "회원가입하는 API")    public ApiResponse<Object> signUp(@RequestBody UserSignUpRequest request){        userAccountService.saveUser(request.toDto());        return ApiResponse.successWithNoContent();    }    @PostMapping("/login")    @Operation(summary = "로그인", description = "로그인하는 API")    public ApiResponse<Long> login(@RequestBody UserLoginRequest request){        return ApiResponse.successResponse(userAccountService.loginUser(request.toDto()));    }    @PostMapping("/delete")    @Operation(summary = "회원탈퇴", description = "회원탈퇴 하는 API")    public ApiResponse<Boolean> withdraw(@RequestBody UserDeleteRequest request){        return ApiResponse.successResponse(userAccountService.withdraw(request.toDto()));    }}