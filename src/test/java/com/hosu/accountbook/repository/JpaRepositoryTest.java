package com.hosu.accountbook.repository;import com.hosu.accountbook.domain.UserAccount;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;import java.util.List;import static org.assertj.core.api.Assertions.assertThat;@DisplayName("JPA 연결 테스트")@DataJpaTestpublic class JpaRepositoryTest {    private final UserRepository userRepository;    JpaRepositoryTest(            @Autowired UserRepository userRepository    ){        this.userRepository = userRepository;    }    @DisplayName("SELECT 테스트")    @Test    void givenNull_whenSelecting_thenNull(){        //given        //when        List<UserAccount> users = userRepository.findAll();        //then        assertThat(users)                .isNullOrEmpty();    }    @DisplayName("INSERT 테스트")    @Test    void givenTestData_whenInserting_thenWorksFine(){        //given        UserAccount userAccount = UserAccount.of("hojune0904@gmail.com", "test1234", "정호준");        //when        userRepository.save(userAccount);        //then        assertThat(userRepository.count()).isEqualTo(1);    }    @DisplayName("UPDATE 테스트")    @Test    void givenTestData_whenUpdate_thenWorksFine(){        //given        UserAccount userAccount = UserAccount.of("hojune0904@gmail.com", "test1234", "정호준");        userRepository.save(userAccount);        //when        System.out.println(userAccount.getUserName());        userAccount.setUserName("호준정");        userRepository.saveAndFlush(userAccount);        //then        UserAccount saveUser = userRepository.findById(1L).orElseThrow();        System.out.println(userAccount.getUserName() + " : " + saveUser.getUserName());        assertThat(userAccount.getUserName()).isEqualTo(saveUser.getUserName());    }    @DisplayName("DELETE 테스트")    @Test    void givenTestData_whenDelete_thenWorksFine(){        //given        UserAccount userAccount = UserAccount.of("hojune0904@gmail.com", "test1234", "정호준");        userRepository.saveAndFlush(userAccount);        long userCnt = userRepository.count();        //when        userRepository.deleteById(1L);        //then        assertThat(userCnt -1).isEqualTo(userRepository.count());    }}